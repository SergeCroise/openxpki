<!-- Generated by "tools/scripts/ogflow.pl " -->


<conditions>

    <condition name="scpers_workflow_approval_needed"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_need_approval"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_all_certs_installed"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_private_key_exists_in_datapool"
            class="OpenXPKI::Server::Workflow::Condition::DatapoolEntry">
        <param name="datapool_namespace" value="certificate.privatekey"/>
        <param name="datapool_key" value="$cert_identifier"/>
        <param name="condition" value="notnull"/>
    </condition>

    <condition name="scpers_puk_found_in_datapool"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_puk_found_in_datapool"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_all_certs_issued"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_will_need_PIN"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_will_need_pin"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_generated_puk_ok"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="generated_new_puk"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_all_certs_published"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_can_set_puk"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_puk_is_writable"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_all_approvals_present"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="all_approvals_present"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_allow_user_PIN"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_allow_user_pin"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_all_certs_revoked"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_all_certs_unpublished"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_smartcard_status_activated"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="smartcard_status"/>
        <param name="context_value" value="activated"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_all_certs_deleted"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_temp_list_empty"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="tmp_queue"/>
        <param name="condition" value="is_empty"/>
    </condition>

    <condition name="scpers_has_escrow_key_to_rename"
            class="OpenXPKI::Server::Workflow::Condition::WFHash">
        <param name="ds_key" value="$csr_serial"/>
        <param name="hash_name" value="cert_escrow_handle"/>
        <param name="condition" value="key_nonempty"/>
    </condition>

    <condition name="scpers_is_escrow_cert"
            class="OpenXPKI::Server::Workflow::Condition::DatapoolEntry">
        <param name="datapool_namespace" value="certificate.privatekey"/>
        <param name="datapool_key" value="$cert_identifier"/>
        <param name="condition" value="notnull"/>
    </condition>

    <condition name="scpers_is_badge_officer"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_is_badge_officer"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_smartcard_status_initial"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="smartcard_status"/>
        <param name="context_value" value="initial"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_smartchip_id_mismatch"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="smartcard_token_chipid_match"/>
        <param name="context_value" value="mismatch"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_csrs_to_process"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="cert_issuance_data"/>
        <param name="condition" value="exists"/>
    </condition>

    <condition name="scpers_is_escrow_csr"
            class="OpenXPKI::Server::Workflow::Condition::Connector::IsValue">
        <param name="context_key" value="csr_cert_type"/>
        <param name="value" value="1"/>
        <param name="property" value="escrow_key"/>
        <param name="prefix" value="smartcard.policy.certs.type"/>
    </condition>

    <condition name="scpers_policy_input_required"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="policy_input_required"/>
        <param name="condition" value="notnull"/>
    </condition>


    <condition name="scpers_purge_token_before_personalization"
            class="OpenXPKI::Server::Workflow::Condition::WorkflowContext">
        <param name="context_key" value="flag_purge_token_before_personalization"/>
        <param name="context_value" value="yes"/>
        <param name="condition" value="equals"/>
    </condition>

    <condition name="scpers_card_is_empty"
            class="OpenXPKI::Server::Workflow::Condition::WFArray">
        <param name="array_name" value="certids_on_card"/>
        <param name="condition" value="is_empty"/>
    </condition>

</conditions>
