<%args>
  $__session_id => undef
  $no_menu      => undef
  $next_comp    => undef
</%args>
<%perl>
  ## do we have a usable session?
  sub session_id_present {
      if (defined $context and
          exists $context->{session_id} and
          length $context->{session_id})
      {
          return 1;
      } else {
          return 0;
      }
  }
  my $current_url = $ENV{REQUEST_URI};

  ## let's calculate the path of our mason autohandler root
  my $path = $m->request_comp()->dir_path();
     $path = substr ($path, 1);
     $path =~ s/[^\/]+/../g;
     $path .= "/" if (length $path);

  my $session;

  ### let's check if i18n is configured correctly 
  my $i18n_path = $ENV{OPENXPKI_LOCALE_PREFIX};
  if ((not $i18n_path) or (not -e $i18n_path)) {
</%perl>
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
    <title>OpenXPKI configuration error</title>
    <link rel="stylesheet"
          href="<& /lib/url.mhtml,
                   path => "${path}css/sinorcaish-screen.css",
                   no_session => 1 &>"
          type="text/css" media="screen" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
</head>
<body>
    <h1>Variable OPENXPKI_LOCALE_PREFIX is not set or contains non-existent path!</h1>
    <p>Please set variable OPENXPKI_LOCALE_PREFIX in your Apache configuration file.</p>
</body>  
</html>
<%perl>
      return;
  }

  if ($m->base_comp()->path() ne '/index.html') {
      if (! defined $next_comp) {
          $next_comp = $m->base_comp()->path();
          if (scalar keys %{ $m ->request_args() } > 0) {
              $next_comp .= '?';
              foreach my $key (keys %{ $m->request_args() }) {
                  $next_comp .= $key . '=' . $m->request_args()->{$key} . '&';
              }
          }
      }
  }
  ## if the session is present or faked and
  ## the user tries to penetrate the server then
  ## nothing will happen because the server simply
  ## asks for login and terminates the session
  ## if the authentication is not ok
  ## IMPORTANT: the server and not the client enforces the security
  ## EXCEPTION: if shibboleth is in use then the client forwards
  ##            the session id from its environment (a session injection
  ##            from the browser is not possible)
  my $auth_stuff = "";
  if (not session_id_present())
  {
      $auth_stuff = $m->scomp('/authentication/autohandler', '__session_id' => $__session_id, next_comp => $next_comp);
      if ($auth_stuff =~ /CONNECTION_WORKING/) {
	$auth_stuff = '';
      }
      elsif ($auth_stuff =~ /REDIRECT_TO_SERVICE_AUTOHANDLER/)
      {
        ## the authentication was successfully finished and
        ## now we redirect to the service area
</%perl>
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
  <head>
%   ## if there is an explicit target specified by next_comp
%   ## then we try to call it (security especially permission
%   ## enforcement is managed by the daemon not by the web client)
%   if ($next_comp) {
%     # redirect to /service/index.html if next_comp contains authentication or logout page
%     # if next_comp contains 'authentication' the user after login will either get 
%     #    'CONNECTION_WORKING' message (with Apache 1.3) or
%     #    an error message (with Apache 2.x)
%     # if next_comp contains 'logout.html' the user will be logged out just after login
%     $next_comp =~ s{\/authentication\/index}{\/service\/index}ms if $next_comp =~ m{\/authentication\/index\.html}ms;
%     $next_comp =~ s{\/authentication\/dhandler}{\/service\/index\.html}ms if $next_comp =~ m{\/authentication\/dhandler}ms;
%     $next_comp =~ s{\/logout}{\/index}ms if $next_comp =~ m{logout\.html}ms;
%     # if next_comp already contains session_id and role then remove these items 
%     # to prevent mixture with newly received session_id and role
%     my ($old_session_id) = ($next_comp =~ m{\A .* __session_id=(.+?) & .* \z }xms);
%     my ($old_role) = ($next_comp =~ m{\A .* __role=(.*?) & .* \z }xms);
%     $next_comp =~ s{__session_id=$old_session_id&}{}ms;
%     $next_comp =~ s{__role=$old_role&}{}ms;
%     ## an example URL can be (/openxpki is the mason root directory):
%     ##     http://localhost/openxpki/index.html?next_comp=service/api/issuer_list.html
%     ## after the authentication is gone then the redirect shows the issuer list
%      $path =~ s{ / \z}{}xms;
%      if ($next_comp !~ /\&/) {
%          $next_comp .= '?';
%      }
      <meta http-equiv="refresh" content="0; URL=<% $path %><% $next_comp | n %>__session_id=<% $context->{session_id} %>&__role=<% $context->{role} %>&no_menu=<% $no_menu %>&__language=<% $context->{language} %>"/>
%   } else {
      <meta http-equiv="refresh" content="0; URL=<% $path %>service/index.html?__session_id=<% $context->{session_id} %>&__role=<% $context->{role} %>&__language=<% $context->{language} %>"/>
%   }
  </head>
</html>
<%perl>
        return;
      }
  }

  ## sometimes no_menu is active but we need some informations
  ## from the menu class to calculate links
  ## therefore we initialize the menu separately from the output
  $m->comp ('/lib/init_menu.mhtml') if (not $auth_stuff);
</%perl>
% if ($m->request_comp()->path() !~ /^\/binary\//) {
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <title><& SELF:title, %ARGS &></title>
    <link rel="StyleSheet"
          href="<& /lib/url.mhtml, 
                   path => "${path}css/deuba.css",
                   no_session => 1 &>" 
          type="text/css" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta http-equiv="Content-Script-Type" content="text/javascript"/>
  </head>
  <body>
    <base target="_self">
    <style>
      body {margin-left: 0px;margin-right:12px;}
    </style>		
    <table cellspacing="0" cellpadding="0" width="100%">
      <tr>
        <td valign="top">	
          <!-- Header Start -->
          <style>
            #buehne1 {line-height: 19px; background-image:url(<% $path %>images/buehne_1_intra.gif);padding:0;}
            #buehne3 {height:58px; background-image:url(<% $path %>images/buehne_3_intra.jpg); text-align:none; padding-left:184px;}
            #buehne3 span {position:absolute;line-height:1em;margin:40px 0 0 12px}
            #buehne3 img {float:right; margin-left:80px}
            #buehne4 {height:11px; background-color:white; text-align:left; background-image:url('<% $path %>images/buehne_4_intra.gif'); background-position:top right;}
            #buehne5 {background-image:url(<% $path %>images/buehne_5_intra.gif);background-position:right; background-color:#003399;}
            #buehne5 .horizontal_navi a {height:24px;line-height:24px ;background-image:url(<% $path %>images/div_intra.gif) ;background-repeat:no-repeat; padding: 5px 0 5px 30px}
            #buehne5 .horizontal_navi a.first {background-image:none;padding-left:0px;}
            * html #buehne5  .horizontal_navi a {padding: 0 0 0 30px}
          </style>
	  <div id="buehne1" class="blue_11">
	    <a href="http://www.db.com/index_e.htm" class="blue_11" style="margin-left:196px">Deutsche&nbsp;Bank&nbsp;Group</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="https://dbpki.tools.intranet.db.com/?page=Contact" class="blue_11" >Contact</a>&nbsp;&nbsp;
          </div>
	  <div id="buehne3"> 
	    <span class="blue_11">Partners&nbsp;in&nbsp;Performance</span>			
	    <img src="<% $path %>images/buehne_2_flex_en_intra.gif" border="0" alt="" usemap="#logo">
	  </div>
	  <div id="buehne4">
	    <img src="<% $path %>images/buehne4_gto.jpg" height="11" border="0" alt="">
	  </div>					
          <!-- end toplevel autohandler -->
      <div class="right">
      </div> <!-- end of right -->
          <!-- no menu present -->
          <div id="buehne5">
% if (not $auth_stuff and not $no_menu) {
            <table cellpadding=0 cellspacing=0 style="height:24px;">
                <tr>
                    <td style="white-space: nowrap; padding-left:12px" class="horizontal_navi">
        <& /lib/get_menu.mhtml,
          first_level => 0,
          last_level  => 0,
          nested      => 0,
          mode        => "ONELINE",
          seperator   => '',
          a_class_first => 'horizontal_navi first',
          a_class       => 'horizontal_navi',
          no_div        => 1,
        &>
                    </td>
                    <td style="width:198px; height:18px"></td>
                </tr>
            </table>
% }
          </div> <!-- do we need this? -->

          <!-- toplevel menu end -->
	  <map name="logo">
            <area shape="rect" coords="495,1,706,40" href="http://www.db.com">
          </map>
          <!-- Header End -->
          <table width="100%" border="0" align="center" cellpadding="0" cellspacing="0">
<!--
            <tr>
              <td colspan="2">
		<div class="breadcrumb breadcrumb_div">
		</div>
	      </td>
            </tr>
-->
            <tr>
              <td>
                <table border="0" cellspacing="2" cellpadding="0" height="100%">
                  <tr>
%   if ($__session_id) {
%     $session = CGI::Session->new(
%       'id:static',
%       $__session_id,
%       {
%           Directory => $ENV{OPENXPKI_MASON_SESSION_DIR},
%       },
%     );
%     $m->comp ('/lib/debug.mhtml',
%               'level' => 1,
%               'msg'   => "CGI::Session with session ID $__session_id retrieved");
%     if (defined $session && defined $session->param('user')) {
%       $m->comp ('/lib/debug.mhtml',
%                 'level' => 1,
%                 'msg'   => "CGI::Session object id: " . $session->id());
%   if (exists $context->{menu} && $session && $session->param('role') ne 'User' && $session->param('role') ne '') {
<td>
          <form action="<% $context->{menu}->get_root() %>/service/api/super_search.html" method="post">
%   my %menu_hash = $context->{menu}->get_menu_hash();
%    foreach my $key (keys %menu_hash) {
%             my $menu_content = $menu_hash{$key} || '';
              <input type="hidden" name="<% $key %>" value="<% $menu_content %>"/>
%    }
       &nbsp;        <input type="text" name="q" value="Search" onfocus="EmptySearchField(this)" size="15" maxlength="250" />
              <input type="image" name="submit" src="<% ${path} %>images/search.png" alt="Search" style="position:relative; top:5px" />
            <script type="text/javascript">
              var EmptySearchFieldDone = 0;
              function EmptySearchField(elem) {
                  if (EmptySearchFieldDone == 0) {
                      elem.value = "";
                      EmptySearchFieldDone = 1;
                  }
                  return true;
                }
            </script>
            <div>
%           my $urls;
%           foreach my $lang (qw( en ru de )) {
%               $urls->{$lang} = $current_url;
%           }
%           $urls->{'en'} =~ s/__language=[^;]*/__language=en_US/;
%           $urls->{'ru'} =~ s/__language=[^;]*/__language=ru_RU/;
%           $urls->{'de'} =~ s/__language=[^;]*/__language=de_DE/;
%           my $translations;
%           $translations->{'en'} = 'English';
%           $translations->{'ru'} = '&#1056;&#1091;&#1089;&#1089;&#1082;&#1080;&#1081;';
%           $translations->{'de'} = 'Deutsche';
%           my @configured_languages = $m->comp('/lib/configured_languages.mhtml');
%           if (scalar @configured_languages > 1) {
%               # only show flags if there is a choice ...
%               foreach my $lang (@configured_languages) {
                    <a href="<% $urls->{$lang} %>"><img src="<% $context->{menu}->get_root() %>/images/<% $lang %>.png" style="margin-right:-1em" alt="<% $translations->{$lang} | n %>" /></a>
%               }
%           }
       &nbsp;        <input type="text" name="q" value="Search" onfocus="EmptySearchField(this)" size="15" maxlength="250" />
%   #my %menu_hash = $context->{menu}->get_menu_hash();
%    foreach my $key (keys %menu_hash) {
%             my $menu_content = $menu_hash{$key} || '';
              <input type="hidden" name="<% $key %>" value="<% $menu_content %>"/>
%    }
              <input type="image" name="submit" src="<% ${path} %>images/search.png" alt="Search" />
            </div>
          </form>
        </div></td>
%   }
%   else {
<td></td>
%   }
<td align=right><div style="color: #666666; font-size: 10px">
% if (! $no_menu  &&
%     $m->request_comp()->title() !~ m{\A /authentication/index.html \z}xms) {
%        my $role = $session->param('role') ? $session->param('role') : 'Anonymous';
<div><% $session->param('user') %> | <% $role %> |
<% i18nGettext($session->param('pki_realm')) %>
</div>
%     }
%   }
% }
</div>
</td>

                  </tr>
                  <tr>
                    <td id="page22" height="100%">
                      <div class="box">
                      <!-- <div class="box-title">menu title</div> FIXME: menu title -->
                        <div class="box-data">
                          <div id="UserMenu" style="display:block;">
% if (not $auth_stuff and not $no_menu) {
        <& /lib/get_menu.mhtml,
          first_level => 1,
          nested      => 1,
          mode        => "DIV",
          a_class_first => 'link_menu',
          a_class       => 'link_menu',
        &>
% }
              </td>
              <!-- menu end -->
              <td id="page24" width="100%" rowspan="3" colspan=2>
                <div id="tiki-center"> 
                  <div class="wikitext">
                    <!-- content -->
% } ## end of if not binary

<%perl>
    if (not length $auth_stuff)
    {
       $m->call_next(); # content
    } else {
       $m->comp('/authentication/autohandler', '__session_id' => $__session_id);
    }
</%perl>

% if ($m->request_comp()->path() !~ /^\/binary\//) {
    <div class="clearer">&nbsp;</div>
    </div>  <!-- main -->

  </body>
</html>
% }

<%init>
</%init>

<%flags>
  inherit => '/syshandler'
</%flags>

<%method title>
% my $session;
% my $realm;
% if (defined $m->request_args()->{'__session_id'}) {
%   $session = CGI::Session->new(
%     'id:static',
%     $m->request_args()->{'__session_id'},
%     {
%       Directory => $ENV{OPENXPKI_MASON_SESSION_DIR},
%     },
%   );
% }
% if (defined $session) {
%   $realm = $session->param('pki_realm');
% }
% if (defined $realm && $realm ne '') {
  dbPKI - <% i18nGettext($realm) %>
% }
% else {
  dbPKI
% }
</%method>
