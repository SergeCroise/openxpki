<%args>
    $workflow_type => undef
    $role          => undef
    $bulk          => undef
</%args>

% if (! $bulk) {
<& /service/open_form.mhtml &>
<input type=hidden name="workflow_type" value="I18N_OPENXPKI_WF_TYPE_CERTIFICATE_SIGNING_REQUEST">
<& /lib/html/hidden_reqargs.mhtml &>
% }
% else {
<& /service/open_form.mhtml, action => $context->{menu}->get_root() . '/service/create_csr/bulk/profile.html' &>
% }


% if (! $bulk) {
    <h1><% i18nGettext ('I18N_OPENXPKI_CLIENT_HTML_MASON_CREATE_CSR_GET_ROLE_TITLE') %></h1>
    <p>
      <% i18nGettext('I18N_OPENXPKI_CLIENT_HTML_MASON_CREATE_CSR_GET_ROLE_DESCRIPTION') %>
    </p>
% }
% else {
    <h1><% i18nGettext ('I18N_OPENXPKI_CLIENT_HTML_MASON_CREATE_CSR_GET_ROLE_BULK_TITLE') %></h1>
    <p>
      <% i18nGettext('I18N_OPENXPKI_CLIENT_HTML_MASON_CREATE_CSR_GET_ROLE_BULK_DESCRIPTION') %>
    </p>
% }

<p>
<& /lib/html/select.mhtml,
   'name'    => "role",
   'default' => [ $role ],
   'values'  => [ @roles ] &>
<& /service/send_form.mhtml &>
<& /service/close_form.mhtml &>
</p>
<dl>

<& /service/create_csr/print_descriptions.mhtml, descriptions => \@descriptions &>

<& /service/create_csr/print_errors.mhtml, 'errors' => \@errors &>

<%init>
    ## read all roles from the server
    my @errors = ();
    my $msg = $context->{client}->send_receive_command_msg(
        "get_available_cert_roles",
    );
    my @roles = ();
    if (ref $msg->{PARAMS} eq 'ARRAY') {
        @roles = @{$msg->{PARAMS}};
    }
    @roles = sort @roles;
    if (ref $msg eq 'ARRAY' && $msg->[0]->{LABEL} ne 'I18N_OPENXPKI_SERVER_API_WORKFLOW_MISSING_REQUIRED_FIELDS') {
        # an error occured
        push @errors, @{ $msg };
    }
    ## return the role if it exists
    if (defined $role and
        grep /^$role$/, @roles)
    {
        return $role;
    }

    ## if we have only one configuration
    ## then we have not to ask the user
    if (scalar @roles == 1)
    {
        return $roles[0];
    }

    my @descriptions = ();
    foreach my $role (@roles)
    {
        # sanitized role form for I18N_ names
        my $sanitized_role = $role;
        $sanitized_role =~ s/ /_/g;
        $sanitized_role =~ s/\./_/g;
        push @descriptions, [ $role, i18nGettext('I18N_OPENXPKI_ROLE_DESC_' . uc($sanitized_role)) ];
    }
</%init>
